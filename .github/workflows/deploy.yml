name: Deploy Next.js Portfolio

on:
  push:
    branches:
      - production # Trigger deployment when pushing to the production branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Up Node.js
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Use a Node.js version that matches your app requirements

      # Step 3: Restore npm Cache
      - name: Restore npm Cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache

      # Step 4: Restore Next.js Cache
      - name: Restore Next.js Cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # Step 5: Install Dependencies
      - name: Install Dependencies
        run: npm ci # Use npm ci for clean, reproducible installs

      # Step 6: Build Next.js Static Site
      - name: Build Next.js Static Site
        run: npm run build # This includes the output: 'export' configuration

      # Step 7: Deploy Static Files to Server
      - name: Deploy Static Files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "out/*" # Ensure this matches the output directory
          target: "/var/www/mywebsite/" # Update with your deployment directory
          rm: true # Remove old files before uploading new ones

      # Step 8: Log Success
      - name: Log Success
        run: echo "Deployment completed successfully"
